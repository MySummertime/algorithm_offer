simulate the whole process directly, use an auxiliary stack



  class Solution {
  public:
      bool validateStackSequences(vector<int>& pushed, vector<int>& popped) {
          std::stack<int> st;
          for (int i = 0, j = 0; j < pushed.size(); ++i) {
              st.push(pushed[i]);
              while (!st.empty() && j < popped.size() && st.top() == popped[j]) {
                  st.pop();
                  ++j;
              }
          }
          return st.empty();
      }
  };
