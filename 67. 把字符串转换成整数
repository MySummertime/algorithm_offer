traverse the string char by char

  1. we do division between a char and '0' so that we could determine whether the char identify a valid number or not;
  2. we should remember that the max of signed int is (2^32 - 1), and the min of signed int is -(2 ^ 32);

  class Solution {
  public:
      int strToInt(string str) {
          if (!str.size()) {
              return 0;
          }
          int i = 0;  short flag = 1;
          int ans = 0;
          int boundry = INT_MAX / 10;
          while (str[i] == ' ') {
              ++i;
              if (i == str.size()) {
                  return 0;
              }
          }
          if (str[i] == '+' || str[i] == '-') {
              flag = (str[i] == '+') ? 1 : -1;
              ++i;
          }
          while (i <= str.size()) {
              if (str[i] < '0' || str[i] > '9') {
                  break;
              }
              if (ans > boundry || (ans == boundry && str[i] > '7')) {
                  return (flag > 0) ? INT_MAX : INT_MIN;
              }
              ans = ans * 10 + (str[i] - '0');
              ++i;
          }
          return flag * ans;
      }
  };
