use greedy method



  1. create an auxiliary array to store each max value while we travese from 1 to n;

  /**
   * @param {number} n
   * @return {number}
   */
  let cuttingRope = function(n) {
      if (n <= 3) {
          return n - 1;
      }
      let ans = new Array(n + 1);
      ans[0] = 0; ans[1] = 1;
      ans[2] = 1; ans[3] = 2;
      for (let i = 4; i <= n; ++i) {
          let tmpMax = 1;
          for (let j = i - 2; j >= i - 3 && j >= Math.floor(i / 2); --j) {
              let val = (ans[j] > j ? ans[j] : j) * (i - j);
              tmpMax = tmpMax >= val ? tmpMax : val;
          }
          ans[i] = tmpMax;
      }
      return ans[n];
  };
  
  
  
  2. use one single variable to store & update the max value while we traverse from 1 to n;
  
  /**
   * @param {number} n
   * @return {number}
   */
  var cuttingRope = function(n) {
      if (n < 4) {
          return n - 1;
      }
      let ans = 1;
      while (n > 4) {
          ans = ans * 3;
          n -= 3;
      }
      return ans * n;
  };
